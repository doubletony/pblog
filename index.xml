<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
xmlns:atom="http://www.w3.org/2005/Atom"
xmlns:content="http://purl.org/rss/1.0/modules/content/"
xmlns:dc="http://purl.org/dc/elements/1.1/"
>

<channel>
<title>Watch back!</title>
<link>http://doubletony-pblog.azurewebsites.net/</link>
<description>Why serious?!</description>
<pubDate>Wed, 16 Oct 2013 21:57:31 GMT</pubDate>
<language>en</language>
<atom:link href="http://doubletony-pblog.azurewebsites.net/index.xml" rel="self" type="application/rss+xml" />

<item>
<title>Samsung Galaxy Note 10.1 Screen Replacement</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0024.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0024.html</guid>
<pubDate>Mon, 22 Jul 2013 06:00:00 +0000</pubDate>
<description>Oops...  Last Tuesday, my tablet slipped into ground, and the screen was broken,</description>
<content:encoded>
<![CDATA[<h2>Oops...</h2>

<p>Last Tuesday, my tablet slipped into ground, and the screen was broken, literally.</p>

<p><img src="https://dl.dropboxusercontent.com/u/3461566/img/note-10-1-fix/WP_000652.jpg" alt="" title="" /></p>

<p>Unfortunately, our university compute store doesn't have any service for Samsung tablets.
The place the computer store guy recommended may charge more than 150 bucks.
Well, after Bing-ing a while, I decided to fix it by myself. The cost is really cheap, less than 30 bucks for the screen digitizer, and one hour (as estimated) according to the following video.</p>

<p><a href="http://www.youtube.com/watch?v=PUyI74c0DhE">Video: Samsung Galaxy Note 10.1 N8000/8010/8013 Disassembly &amp; Assembly - Touch &amp; Display Screen Replacement </a></p>

<h2>Steps</h2>

<ul>
<li>Remove the cover</li>
</ul>

<p><img src="https://dl.dropboxusercontent.com/u/3461566/img/note-10-1-fix/WP_000659.jpg" alt="" title="" /></p>

<p><img src="https://dl.dropboxusercontent.com/u/3461566/img/note-10-1-fix/WP_000660.jpg" alt="" title="" /></p>

<ul>
<li>Remove the battery and motherboard</li>
</ul>

<p><img src="https://dl.dropboxusercontent.com/u/3461566/img/note-10-1-fix/WP_000662.jpg" alt="" title="" /></p>

<p><img src="https://dl.dropboxusercontent.com/u/3461566/img/note-10-1-fix/WP_000663.jpg" alt="" title="" /></p>

<ul>
<li>Remove the digitizer</li>
</ul>

<p><img src="https://dl.dropboxusercontent.com/u/3461566/img/note-10-1-fix/WP_000664.jpg" alt="" title="" /></p>

<ul>
<li>Done</li>
</ul>

<p><img src="https://dl.dropboxusercontent.com/u/3461566/img/note-10-1-fix/WP_000665.jpg" alt="" title="" /></p>]]>
</content:encoded>
</item>

<item>
<title>[Code] Count the number of inversions</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0023.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0023.html</guid>
<pubDate>Sun, 17 Mar 2013 06:00:00 +0000</pubDate>
<description>Problem Statement  Given an unsorted array of distinct integers, find the number</description>
<content:encoded>
<![CDATA[<h2>Problem Statement</h2>

<p>Given an unsorted array of distinct integers, find the number of inversions. (Check the full definition <a href="http://en.wikipedia.org/wiki/Inversion_(discrete_mathematics">here</a>) For example, given "3 1 2 5 4", we have three inversions "3 1", "3 2" and "5 4".</p>

<h2>Famous Solution</h2>

<p>We know that the brute-force way has the time complexity of $O(n^2)$, where $n$ is the number of integers. Well, the famous optimal solution based on divide-and-conquer is $O(nlog(n))$. However, I'm going to show my thoughts.</p>

<p><strong>Update</strong>: Unfortunately, after finishing this post, I found a much more compressive article about this problem. -_-|| Check it <a href="http://www.yeminghu.com/?p=34">here</a>.</p>

<h2>Looks-so-nice one</h2>

<p>This solution looks so nice at first glance. Unfortunately, it works as bad as the brute-force. However, the idea is worth to be known. First observation is that if we know the index of the minimum integer, than we know how many inversions are related to it. Yes, the number is exactly the index. (Well, computer guys should be comfortable with 0-index array.) Now, if we remove this minimum, and repeat this step. We should be able to get the total number of inversions. It doesn't look nice at all. Why? It's still $O(n^2)$. To an experienced programmer, there is a scent of using a min-heap somehow to make the average time of finding minimum element $O(log(n))$.</p>

<h2>Realistic one</h2>

<p>The second method is not related to the above one at all. It's based on an auxiliary binary search tree. The tree node will store necessary information to compute the inversion number. When inserting an new node into a BST, if we can easily know how many nodes are greater than this one, then we know the number of inversions caused by this node. It's not hard to do. For each node, we only need to store the number of nodes in it right subtree plus itself.</p>

<pre class="prettyprint" ><code>class TreeNodeInverse
{

public:
    TreeNodeInverse * left;
    TreeNodeInverse * right;
    int key;
    int counter;

    TreeNodeInverse(int k)
    {
        key = k;
        counter = 1;
        left = right = NULL;
    }

};
</code></pre>

<p>Now, we gradually insert each integer in its original order. When inserting a integer, we count the number of inversions along the traversing path.</p>

<pre class="prettyprint" ><code>int getNumOfInversion( vector&lt;int&gt; nums )
{
    TreeNodeInverse * root = new TreeNodeInverse(nums[0]);
    int counter = 0;
    for (int i = 1; i &lt; nums.size(); i++)
    {
        int invCounter = 0;
        InsertBSTInverse(root, nums[i], invCounter);
        counter += invCounter;
    }
    return counter;
}
</code></pre>

<p>The crucial thing here is how to do the insertion and counting? Actually, it's not that complicated. When traversing along a node's right child, we increase this node's counter by 1 since the new node will belong to its right subtree; when traversing along a node's left child, we increase the inversion counter by this node's counter of right children.</p>

<pre class="prettyprint" ><code>void InsertBSTInverse(TreeNodeInverse * root, int key, int &amp;counter)
{
    if ( root-&gt;key &gt; key)
    {
        // go left
        counter += root-&gt;counter;
        if ( root-&gt;left != NULL )
        {
            InsertBSTInverse(root-&gt;left, key, counter);
        }
        else
        {
            TreeNodeInverse * node = new TreeNodeInverse(key);
            root-&gt;left = node;
        }
    }
    else
    {
        // go right
        root-&gt;counter++;
        if ( root-&gt;right != NULL )
        {
            InsertBSTInverse(root-&gt;right, key, counter);
        }
        else
        {
            TreeNodeInverse * node = new TreeNodeInverse(key);
            root-&gt;right = node;
        }
    }

}
</code></pre>

<p>Done!</p>

<h2>Comments</h2>

<p>Obviously, there are issues of this algorithm making it not optimal. First, the worst case is $O(n^2)$ when the input will generate a not well-balanced tree. Second, it's definitely a serial algorithm. So, we will lose the performance improvement from parellization.</p>]]>
</content:encoded>
</item>

<item>
<title>Exhausted</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0022.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0022.html</guid>
<pubDate>Tue, 30 Oct 2012 06:00:00 +0000</pubDate>
<description>Passed my Comprhensive Exam  I'm happy.</description>
<content:encoded>
<![CDATA[<h2>Passed my Comprhensive Exam</h2>

<p>I'm happy.</p>]]>
</content:encoded>
</item>

<item>
<title>Bibtex: "I found no \\bibdata command"</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0021.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0021.html</guid>
<pubDate>Sun, 16 Sep 2012 06:00:00 +0000</pubDate>
<description>Problem  I recently use emacs and auctex to write latex document. Something weir</description>
<content:encoded>
<![CDATA[<h2>Problem</h2>

<p>I recently use emacs and auctex to write latex document. Something weirdly happening is that sometimes the bibtex doesn't work and bark with two errors:</p>

<blockquote>
  <p>I found no \bibdata command---while reading file xxx.aux</p>
  
  <p>I found no \bibstyle command---while reading file xxx.aux</p>
</blockquote>

<h2>Solution</h2>

<p>Actually, the culprit is me. I forgot to close the preview pdf file and run the latex command. So the solution is simple, close the pdf, run latex, run bibtex, run latex twice.</p>]]>
</content:encoded>
</item>

<item>
<title>A simple three.js demo</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0020.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0020.html</guid>
<pubDate>Sat, 08 Sep 2012 06:00:00 +0000</pubDate>
<description>What is three.js?  I'm not a good story teller. More details on the project page</description>
<content:encoded>
<![CDATA[<h2>What is three.js?</h2>

<p>I'm not a good story teller. More details on the project <a href="https://github.com/mrdoob/three.js/">page</a> on GitHub. 
Briefly, it's a javascript library providing html 3D renderers.</p>

<h2>Show me some demos?</h2>

<p>Here are a bunch of <a href="http://mrdoob.github.com/three.js/">demos</a>.</p>

<h2>My poor one.</h2>

<p>Credit to <a href="http://creativejs.com/tutorials/three-js-part-1-make-a-star-field/">creative JS</a>. I simply modified this
demo by adding random color. <a href="http://www.egr.msu.edu/~wangyua6/demo/">Enjoy</a> it if you're not satisfied with any demo above.</p>]]>
</content:encoded>
</item>

<item>
<title>[Emacs] C-n and C-p</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0019.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0019.html</guid>
<pubDate>Tue, 28 Aug 2012 06:00:00 +0000</pubDate>
<description>Purpose  In most cases, C-n and C-p work well enough to go to next and previous </description>
<content:encoded>
<![CDATA[<h1>Purpose</h1>

<p>In most cases, C-n and C-p work well enough to go to next and previous line. However, when I read a long document,
I always press C-l after C-n or C-P to center the buffer. It may look much "geeky" when some one press keyboard frequently.
However, I'm a lazy one.  Why don't simply bind a new keystroke to do that?</p>

<h1>Solution</h1>

<p>It's pretty straightforward. Since M-n and M-p are not bound to any command, I bind them to those two keys.</p>

<pre class="prettyprint" ><code> ;; redefine the next line and previous line stuff

 (defun my-next-line ()
   (interactive)
   (next-line)
   (recenter)
   )


 (defun my-previous-line ()
   (interactive)
   (previous-line)
   (recenter)
   )


 (global-set-key (kbd "M-n") 'my-next-line)
 (global-set-key (kbd "M-p") 'my-previous-line)
</code></pre>]]>
</content:encoded>
</item>

<item>
<title>My first chrome extension</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0018.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0018.html</guid>
<pubDate>Sun, 26 Aug 2012 06:00:00 +0000</pubDate>
<description>Just a re-post  It's original posted on my another blog in Chinese.  Motivation </description>
<content:encoded>
<![CDATA[<h1>Just a re-post</h1>

<p>It's original posted on my another <a href="http://www.cse.msu.edu/~wangyua6/blog/?p=1738">blog</a> in Chinese.</p>

<h1>Motivation</h1>

<p>The recent update of Chrome is nice to me. It will open PDF link with <a href="http://docs.google.com">Google Document</a>. 
However, sometimes, it's just not working that well. I searched a while on Google's extension store but no luck
there. Finally, I decide to create a such extension since it's not very hard to implement.  Actually, it's very
simple. I have no exprience of developing Chorme extenstion before. It just took me about 30 mintues to read the
Document and around 10 mintues to write up the extension. Yeah, I'm kind of showing off :)</p>

<h1>Download</h1>

<p>For those busy guys, here is the link for <a href="https://dl.dropbox.com/u/3461566/sharedTools/doc.crx">download</a>. 
(<em>WARNING:</em> It may pop-up directly for installation.)</p>

<h1>Story behind it</h1>

<p>Well, let's find another time.</p>]]>
</content:encoded>
</item>

<item>
<title>Again, Jacobi iteration on GPU</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0017.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0017.html</guid>
<pubDate>Wed, 15 Aug 2012 06:00:00 +0000</pubDate>
<description>What's updated?  Here is my old post. The purpose of that post is just to provid</description>
<content:encoded>
<![CDATA[<h2>What's updated?</h2>

<p>Here is my old <a href="./jacboi_gpu.html">post</a>. The purpose of that post is just to provide code snippets for my
<a href="http://www.cse.msu.edu/~wangyua6/presentation/gpusolver.html">presentation</a>.
In that post, however, the code of VecNorm ( VecMax ) is not working correctly for some cases.</p>

<p>As always, here is the new code. [<a href="https://dl.dropbox.com/u/3461566/jacobi_new.cu">download</a>]</p>

<h2>So, what's the problem?</h2>

<pre class="prettyprint" ><code>__global__ void VecMax( float * vec,  int dim)
{
     int tid = threadIdx.x + blockIdx.x * blockDim.x;
     while (dim &gt; 1)
     {
          int mid = dim / 2; // get the half size
          if ( tid &lt; mid)    // filter the active thread
          {
               if ( vec[tid] &lt; vec[tid+mid] ) // get the larger one between vec[tid] and vec[tid+mid]
                    vec[tid] = vec[tid+mid];  // and store the larger one in vec[tid]
          }

          //deal with the odd case
          if ( dim % 2 )       // if dim is odd...we need care about the last element
          {
               if ( tid == 0 ) // only use the vec[0] to compare with vec[dim-1]
               {
                    if ( vec[tid] &lt; vec[dim-1] )
                         vec[tid] = vec[dim-1];
               }
          }

          __syncthreads(); // sync all threads
          dim /= 2;        // make the vector half size short.
     }
}
</code></pre>

<p>This function may not work properly when the number of blocks is greater than 1. The reason is that
<em>syncthreads()</em> only <em>* sync threads within one block  *</em>. So, it'll cause the problem. For example,
if the dim = 1024 and the thread number is 256, thus the block number is 4. In the first block, thread 0 compares
vec[0] and vec[512]. Then it waits all other threads in the first block until they finish the job. Now, in the first block,
the new dim is 512, so thread 0 compares vec[0] and vec[256]. However, we don't know whether vec[256] is safe
to use or not, because the thread-0 in block 2 may still work on comparing vec[256] and vec[256+512] in its first iteration
of the second block. Thus, we have troubles.</p>

<h2>What's the new solution?</h2>

<p>We have several options. Since <a href="http://developer.nvidia.com/cuda/cuda-downloads">CUDA</a> 4.0, <a href="https://code.google.com/p/thrust/">thrust</a> has been included in the official package. So we can use a thrust function of vector maximum as an option.</p>

<p>Also, we can solve the problem still with some basic CUDA codes. The strategy now is to use a loop on CPU and
let GPU does the job just for one iteration. The following code implements the idea of breaking the loop step by step.</p>

<pre class="prettyprint" ><code>void VecMax( float * vec,  int dim, int dimB, int dimT)
{

     while (dim &gt; 1)
     {
          VecMaxOneStepCompare&lt;&lt;&lt;dimB, dimT&gt;&gt;&gt;(vec, dim);

          // if the dimension is odd.
          if( dim % 2)
          {
               SwapForOddDim&lt;&lt;&lt;1,1&gt;&gt;&gt;(vec, dim);
          }
          dim /= 2;        // make the vector half size short.
     }

     // compare last two values
     SwapForOddDim&lt;&lt;&lt;1,1&gt;&gt;&gt;(vec, 2);
}
</code></pre>

<p>And the VecMaxOneStepCompare is just a single step to compare the element with index $i$ and $i+\frac{dim}{2}$.</p>

<pre class="prettyprint" ><code>__global__ void SwapForOddDim(float * vec, int dim)
{
     if ( vec[0] &lt; vec[dim-1] )
          vec[0] = vec[dim-1];
}


__global__ void VecMaxOneStepCompare( float * vec,  int dim)
{
     int tid = threadIdx.x + blockIdx.x * blockDim.x;
     int mid = dim / 2; // get the half size

     while( tid &lt; mid)
     {
          if ( tid &lt; mid)    // filter the active thread
          {
               if ( vec[tid] &lt; vec[tid+mid] ) // get the larger one between vec[tid] and vec[tid+mid]
                    vec[tid] = vec[tid+mid];  // and store the larger one in vec[tid]
          }

          tid += gridDim.x * blockDim.x;
     }
     __syncthreads();
}
</code></pre>]]>
</content:encoded>
</item>

<item>
<title>cling - An interactive C++ interpreter</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0016.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0016.html</guid>
<pubDate>Tue, 14 Aug 2012 06:00:00 +0000</pubDate>
<description>I literally understand the title, so what's that?  Well, I like python 's intera</description>
<content:encoded>
<![CDATA[<h2>I literally understand the title, so what's that?</h2>

<p>Well, I like <a href="http://python.org/">python</a> 's interactive programming environment. It makes things easier. 
For example, testing a simple piece of code or playing with a module to get familiar with it. So how about C++? It's kind of
tedious to write a .cpp file and then compile it to run. If something does not work as what I expected, I need
change the code and repeat the above procedure again and again. It seems not bearable for a lazy one like me.</p>

<p>Then I searched around and finally found <a href="http://root.cern.ch/drupal/content/what-cling">cling</a>.</p>

<h2>Just a snapshot</h2>

<p>After the long wait of building, making and installing, I finally get it worked pretty nicely. Here 
is just a snapshot to show (off) :)</p>

<p><img src="http://dl.dropbox.com/u/3461566/img/cling.png" alt="cling" title="" /></p>

<h2>Comments</h2>

<ol>
<li><p>It's still a bit tedious. I have to type "#include <iostream>" stuff every time I launch cling. Maybe there is a hack
to include some head files as default.</p></li>
<li><p>Laggy. It may due to my poor <em>ATT</em> connection, but cling is a bit slow. Well, it's not that scaring.</p></li>
<li><p>Future comments reserved.</p></li>
</ol>]]>
</content:encoded>
</item>

<item>
<title>Binary trees and triangle dissections</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0015.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0015.html</guid>
<pubDate>Thu, 09 Aug 2012 06:00:00 +0000</pubDate>
<description>What's the problem?  Actually, the following problem is from the epic book - The</description>
<content:encoded>
<![CDATA[<h2>What's the problem?</h2>

<p>Actually, the following problem is from the epic book - <a href="http://www-cs-faculty.stanford.edu/~uno/taocp.html">The Art of Computer Programming</a>.</p>

<blockquote>
  <p>Find a simple one-to-one correspondence between binary trees with $n$ nodes and 
  dissections of an $(n+2)$-sided convex polygon into $n$ triangles, assuming that
  the sides of the polygon are distinct.</p>
</blockquote>

<h2>Solution ?</h2>

<p>I yield to write the solution here since TAOCP does have solution. So, the hint is
Can you find the relation between the following stuff and a binary tree?</p>

<p>$$ (((12) 3) 4)  $$</p>]]>
</content:encoded>
</item>

<item>
<title>[IMO 2012] Problem 4</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0014.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0014.html</guid>
<pubDate>Wed, 08 Aug 2012 06:00:00 +0000</pubDate>
<description>Problem  Find all functions $ f: \mathbb{Z} \to \mathbb{Z} $ such that, for all </description>
<content:encoded>
<![CDATA[<h2>Problem</h2>

<p>Find all functions $ f: \mathbb{Z} \to \mathbb{Z} $ such that, for all integers $a,b,c$ that
satisfy $a+b+c=0$, the following equality holds:</p>

<p>$$ {f(a)}^2 + {f(b)}^2 + {f(c)}^2 = 2{f(a)}{f(b)} + 2{f(b)}{f(c)} + 2{f(c)}{f(a)} $$</p>

<h2>Some simple results</h2>

<p>First, let $a=b=c=0$ and we will have  $f(0)=0$.</p>

<p>Second, Set $c=0$ and $b=-a$, we get $f(a)=f(-a)$ (wow,it's an even function).</p>

<p>Then, if we replace $c$ by $a+b$ (since $f(c)=f(-a-b)=f(a+b)$), we can obtain the following equality:</p>

<p>$$ {(f(a+b) - (f(a)+f(b))) }^2 = 4f(a)f(b) $$</p>

<h2>Find the recurrence relation</h2>

<p>Now, we have enough knowledge to analyze the properties of function $f$.</p>

<p><em>First</em>, we have $f(z) \geq 0$  for all $z \in \mathbb{z}$ or  $f(z) \leq 0$  for all $z \in \mathbb{z}$
It's not difficult to see since if we can find two values $z_1, z_2$ having opposite signs, then 
$4f(z_1)f(z_2) &lt; 0$ which is impossible.</p>

<p><em>Second</em>, if we have a non-negative function $f$ as a solution, then $g(z)=-f(z)$ is also a solution.
It's still not difficult to see since each term in the original equality is of order two.</p>

<p>If we assume $f$ is a non-negative solution, we can take out the square safely to obtain the following equality:</p>

<p>$$ f(a+b) - (f(a)+f(b)) = \pm 2\sqrt{f(a)f(b)} $$</p>

<p>which also means</p>

<p>$$ f(a+b) = (\sqrt{f(a)} \pm \sqrt{f(b)})^2$$</p>

<p>Replace $b$ by $1$, we can get the recurrence relation:</p>

<p>$$ f(a+1) = (\sqrt{f(a)} \pm \sqrt{f(1)})^2$$</p>

<p>To make it simple, we can replace function $f$ by a function $g$, where $f(a) = g^2(a), g(a) \geq 0$. (Think: why can we do this?)</p>

<p>Now, the equality will look like $ g^2(a+1) = ( g(a) \pm g(1) )^2 $, which means</p>

<p>$$ g(a+1) = \pm (g(a) \pm g(1) )  $$</p>

<h2>All solutions?</h2>

<p>Well, I will leave it there. (HINT: there are two classes of non-trivial solutions.)</p>]]>
</content:encoded>
</item>

<item>
<title>[IMO 2012] Problem 2</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0013.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0013.html</guid>
<pubDate>Tue, 07 Aug 2012 06:00:00 +0000</pubDate>
<description>Problem  Let $ n \geq 3 $ be an integer, and let $ a_2, a_3, \cdots , a_n$ be po</description>
<content:encoded>
<![CDATA[<h2>Problem</h2>

<p>Let $ n \geq 3 $ be an integer, and let $ a_2, a_3, \cdots , a_n$ be positive real numbers such that
$ a_2 a_3 \cdots a_n = 1 $. Prove that</p>

<p>$$ (1+a_2)^2 (1+a_3)^3 \cdots (1+a_n)^n > n^n  $$</p>

<h2>Hint: arithmetic mean $\geq$ geometric mean</h2>

<p>For each term, $(1+a_k)^k$, we may try to make it looks like something of arithmetic mean. So, he have</p>

<p>$$ ((k - 1) (\frac{1}{k-1}) + a_k)^k $$</p>

<p>Now we have,</p>

<p>$$ ((k - 1) (\frac{1}{k-1}) + a_k)^k  \geq k^k a_k (\frac{1}{k - 1})^{k-1} $$</p>

<p>which means $ (1+a_k)^k \geq a_k\frac{k^k}{{(k-1)}^{k-1}} $</p>

<p>Now, what follows is straightforward.</p>]]>
</content:encoded>
</item>

<item>
<title>Last non-zero digit of a factorial</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0012.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0012.html</guid>
<pubDate>Sun, 05 Aug 2012 06:00:00 +0000</pubDate>
<description>What's the problem?  Given a number $ n $, find the last non-zero digit of $ n! </description>
<content:encoded>
<![CDATA[<h2>What's the problem?</h2>

<p>Given a number $ n $, find the last non-zero digit of $ n! $. For example, given 5, the
last non-zero digit is 2. (since $ 5! = 120 $.)</p>

<h2>Emm, brute-force first.</h2>

<p>Well, it seems not an easy problem. The factorial increases fast, so the brute-force method 
as following will explode very fast. It's overflow when n is only as small as 20.</p>

<pre class="prettyprint" ><code>int bruteLastNonzerodigit(int n)
{
     int factorial = 1;

     for (int i = 1; i &lt;= n; i++)
     {
          factorial *= i;
     }

     while( (factorial % 10) == 0 )
     {
          factorial /= 10;
     }
     return factorial % 10;
}
</code></pre>

<h2>A better one.</h2>

<p>So, if we think a bit deeply, we'll find that we are not necessary to store the entire result of a factorial.
What if we can store a portion of the several digits from last non-zero digit? And take care the multipler of 5
since zero of a factorial is produced by the factor of 5. For example, $5! = \cdots 0$, $10! = \cdots 00$. 
Thus, we only need to keep a small portion
of last non-zero digits.</p>

<pre class="prettyprint" ><code>int getFiveOrder(int &amp;n)
{
     // we need change n
     int count = 0;
     while ( (n % 5) == 0  )
     {
          count += 1;
          n /= 5;
     }
     return count;
}

int lastNonzeroDigit(int n)
{
     int lastPortion = 1;

     for( int i = 1; i &lt;= n; i++ )
     {
          int remain = i;
          int fiveOrder = getFiveOrder(remain);
          int divider = 1&lt;&lt;fiveOrder;
          lastPortion /= divider;
          lastPortion *= remain;
          if (lastPortion &lt; 0)
          {
               cout&lt;&lt;"Warnning: overflow..\n";
          }
          lastPortion = lastPortion % 10000000;
     }

     return lastPortion % 10;
}
</code></pre>

<p>It's a little better than the brute-force version. However, it's still exploded around 250.
The reason is not difficult to find: we can only keep a very limited last portion (% 10000000).
And it's still a waste.</p>

<h2>Now, any better one?</h2>

<p>So, is there any better one? Yes. If we are given a number of the format $ n = a \cdot b \cdot c $,
the last digit also can be computed as ( ((a % 10) * (b % 10) * (c % 10)) % 10). So can we borrow the
same idea to compute the last non-zero digit. For instance, if we have a function $ f $, where $f(n)$
will give us the last non-zero digit of $ n $, then can we compute $ f(abc)= f( f(a) f(b) f(c) ) $?</p>

<p>Unfortunately, the answer is no. For example $n = 12 \cdot 5$, $f(12 \cdot 5) = 6$, while $f(f(12)f(5))=1$.
Let's take a look why it's not working as we expected. The reason is that we have a pair of $2$ and $5$, which
will create a $0$ at the end. Thus, if we can get rid of the pairs of $2$ and $5$ from $n$, then we should be safe to compute
last digit similar as the above strategy. Thus, we have the following program, which works better.</p>

<pre class="prettyprint" ><code>int getOrder(int &amp;n, int d)
{
     int count = 0;
     while ( (n % d) == 0  )
     {
          count += 1;
          n /= d;
     }
     return count;
}

int lastNonzeroDigit(int n)
{
     int twoOrderCount = 0; // we only need count the order of 2, think it why?
     int lastDigit = 1;

     for( int i = 1; i &lt;= n; i++ )
     {
          int remain = i;
          int fiveOrder = getOrder(remain, 5);
          int twoOrder = getOrder(remain, 2);
          twoOrderCount += (twoOrder - fiveOrder);
          lastDigit = (lastDigit * remain % 10);
     }

     for (int i = 0; i &lt; twoOrderCount; i++)
     {
          lastDigit = ( lastDigit * 2 ) % 10;
     }
     return lastDigit;
}
</code></pre>

<p>This piece of code works nice for the input n as large as 10000000 within a blink. 
However, the story is not end. It takes a while on my computer to get the result of 100000000.
Can we improve it from the aspect of time-complexity? The answer is <em>YES</em> but there is not enough
space in the margin to write it :)</p>]]>
</content:encoded>
</item>

<item>
<title>Recommend a decent music radio</title>
<link>http://doubletony-pblog.azurewebsites.net/doodle0011.html</link>
<guid>http://doubletony-pblog.azurewebsites.net/doodle0011.html</guid>
<pubDate>Fri, 03 Aug 2012 06:00:00 +0000</pubDate>
<description>Jing.fm  Jing.fm is yet another online music radio. However, the selling point i</description>
<content:encoded>
<![CDATA[<h2>Jing.fm</h2>

<p><a href="http://jing.fm">Jing.fm</a> is yet another online music radio. However, the selling point is its HD music. 
So far, it feeds me well. If you're also interested, the following invitation codes are
free to use. Enjoy!</p>

<p><a href="http://jing.fm/?e1pfVhdBGRIW">http://jing.fm/?e1pfVhdBGRIW</a></p>

<p><a href="http://jing.fm/?e1pfVhdBCQcW">http://jing.fm/?e1pfVhdBCQcW</a></p>

<p><a href="http://jing.fm/?e1pfVhdBDhsT">http://jing.fm/?e1pfVhdBDhsT</a></p>

<p><a href="http://jing.fm/?e1pfVhdBAxMO">http://jing.fm/?e1pfVhdBAxMO</a></p>

<p><a href="http://jing.fm/?e1pfVhdBFg4K">http://jing.fm/?e1pfVhdBFg4K</a></p>

<p><img src="http://dl.dropbox.com/u/3461566/img/Jing_Music.png" alt="Jing.fm" title="" /></p>]]>
</content:encoded>
</item>

</channel>
</rss>
